#version 450
layout(local_size_x = 4 , local_size_y=4, local_size_z = 4) in;
layout(binding = 0) uniform sampler3D in_sampler;
layout(binding = 1) writeonly buffer CellType{
	uint d_celltype[];
};
layout(binding = 2) writeonly buffer TriangleCount{
	uint d_tricount[];
};
layout(binding = 3) uniform MetaInfo{
	uint x;
	uint y;
	uint z;
	float isovalue;
}meta;

const uint nr_triangles[256] = { 0,1,1,2,1,2,2,3,
                                 1,2,2,3,2,3,3,2,
                                 1,2,2,3,2,3,3,4,
                                 2,3,3,4,3,4,4,3,
                                 1,2,2,3,2,3,3,4,
                                 2,3,3,4,3,4,4,3,
                                 2,3,3,2,3,4,4,3,
                                 3,4,4,3,4,5,5,2,
                                 1,2,2,3,2,3,3,4,
                                 2,3,3,4,3,4,4,3,
                                 2,3,3,4,3,4,4,5,
                                 3,4,4,5,4,5,5,4,
                                 2,3,3,4,3,4,2,3,
                                 3,4,4,5,4,5,3,2,
                                 3,4,4,3,4,5,3,2,
                                 4,5,5,4,5,2,4,1,
                                 1,2,2,3,2,3,3,4,
                                 2,3,3,4,3,4,4,3,
                                 2,3,3,4,3,4,4,5,
                                 3,2,4,3,4,3,5,2,
                                 2,3,3,4,3,4,4,5,
                                 3,4,4,5,4,5,5,4,
                                 3,4,4,3,4,5,5,4,
                                 4,3,5,2,5,4,2,1,
                                 2,3,3,4,3,4,4,5,
                                 3,4,4,5,2,3,3,2,
                                 3,4,4,5,4,5,5,2,
                                 4,3,5,4,3,2,4,1,
                                 3,4,4,5,4,5,3,4,
                                 4,5,5,2,3,4,2,1,
                                 2,3,3,2,3,4,2,1,
                                 3,2,4,1,2,1,1,0};

void main(){
	uvec3 pos = gl_WorkGroupID.xyz * gl_WorkGroupSize.xyz + gl_LocalInvocationID.xyz;
	uint idx = pos.x + pos.y * meta.x + pos.z * meta.y * meta.x;
	if(idx >= meta.x * meta.y * meta.z) return ;
	float iso = meta.isovalue;
	vec3 dim = vec3(meta.x, meta.y, meta.z);
	uint cell_type = uint( texture(in_sampler, vec3(pos)/dim).x > iso) |
					uint( texture(in_sampler, vec3(pos + uvec3(1,0,0))/dim).x > iso) << 1 |
					uint( texture(in_sampler, vec3(pos + uvec3(1,1,0))/dim).x > iso) << 2 |
					uint( texture(in_sampler, vec3(pos + uvec3(0,1,0))/dim).x > iso) << 3 |
					uint( texture(in_sampler, vec3(pos + uvec3(0,0,1))/dim).x > iso) << 4 |
					uint( texture(in_sampler, vec3(pos + uvec3(1,0,1))/dim).x > iso) << 5 |
					uint( texture(in_sampler, vec3(pos + uvec3(1,1,1))/dim).x > iso) << 6 |
					uint( texture(in_sampler, vec3(pos + uvec3(0,1,1))/dim).x > iso) << 7 ;
	d_celltype[idx] = cell_type;
	d_tricount[idx] = nr_triangles[cell_type];
}
